yoastPremiumWebpackJsonp([6],{

/***/ 890:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* global YoastCustomFieldsPluginL10 */\n/* global YoastSEO */\n/* global _ */\n(function () {\n\t/**\n  * The Yoast Custom Fields Plugin adds the custom fields to the content that were defined in the titles and meta's\n  * section of the Yoast SEO settings when those fields are available.\n  *\n  * @constructor\n  * @property {Array} customFieldNames\n  * @property {Object} customFields\n  */\n\tvar YoastCustomFieldsPlugin = function YoastCustomFieldsPlugin() {\n\t\tYoastSEO.app.registerPlugin(\"YoastCustomFieldsPlugin\", { status: \"loading\" });\n\n\t\tthis.customFields = {};\n\n\t\tthis.updateCustomFields();\n\t\tthis.declareReady();\n\t};\n\n\t/**\n  * Declares ready with YoastSEO.\n  *\n  * @returns {void}\n  */\n\tYoastCustomFieldsPlugin.prototype.declareReady = function () {\n\t\tYoastSEO.app.pluginReady(\"YoastCustomFieldsPlugin\");\n\t\tYoastSEO.app.registerModification(\"content\", this.addCustomFields.bind(this), \"YoastCustomFieldsPlugin\");\n\t};\n\n\t/**\n  * Declares reloaded with YoastSEO.\n  *\n  * @returns {void}\n  */\n\tYoastCustomFieldsPlugin.prototype.declareReloaded = function () {\n\t\tYoastSEO.app.pluginReloaded(\"YoastCustomFieldsPlugin\");\n\t};\n\n\t/**\n  * The callback used to add the custom fields to the content to be analyzed by YoastSEO.js.\n  *\n  * @param {String} content The content for adding the custom fields to.\n  * @returns {String} The content.\n  */\n\tYoastCustomFieldsPlugin.prototype.addCustomFields = function (content) {\n\t\tfor (var fieldName in this.customFields) {\n\t\t\tcontent += \" \";\n\t\t\tcontent += this.customFields[fieldName];\n\t\t}\n\t\treturn content;\n\t};\n\n\t/**\n  * Fetches the relevant custom fields from the form and saves them in a property.\n  * Then declares reloaded and rebinds the custom fields form.\n  *\n  * @returns {void}\n  */\n\tYoastCustomFieldsPlugin.prototype.updateCustomFields = function () {\n\t\tvar customFields = {};\n\t\tjQuery(\"#the-list > tr:visible\").each(function (i, el) {\n\t\t\tvar customFieldName = jQuery(\"#\" + el.id + \"-key\").val();\n\t\t\tif (YoastCustomFieldsPluginL10.custom_field_names.indexOf(customFieldName) !== -1) {\n\t\t\t\tcustomFields[customFieldName] = jQuery(\"#\" + el.id + \"-value\").val();\n\t\t\t}\n\t\t});\n\t\tthis.customFields = customFields;\n\t\tthis.declareReloaded();\n\t\tthis.bindCustomFields();\n\t};\n\n\t/**\n  * Adds the necessary event bindings for monitoring which custom fields are added/removed/updated.\n  *\n  * @returns {void}\n  */\n\tYoastCustomFieldsPlugin.prototype.bindCustomFields = function () {\n\t\tvar callback = _.debounce(this.updateCustomFields.bind(this), 500, true);\n\n\t\tjQuery(\"#the-list .button + .update_meta\").off(\"click.wpseoCustomFields\").on(\"click.wpseoCustomFields\", callback);\n\t\tjQuery(\"#the-list\").off(\"wpListDelEnd.wpseoCustomFields\").on(\"wpListDelEnd.wpseoCustomFields\", callback);\n\t\tjQuery(\"#the-list\").off(\"wpListAddEnd.wpseoCustomFields\").on(\"wpListAddEnd.wpseoCustomFields\", callback);\n\t\tjQuery(\"#the-list textarea\").off(\"input.wpseoCustomFields\").on(\"input.wpseoCustomFields\", callback);\n\t};\n\n\tif (typeof YoastSEO !== \"undefined\" && typeof YoastSEO.app !== \"undefined\") {\n\t\tnew YoastCustomFieldsPlugin();\n\t} else {\n\t\tjQuery(window).on(\"YoastSEO:ready\", function () {\n\t\t\tnew YoastCustomFieldsPlugin();\n\t\t});\n\t}\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./custom-fields-plugin.js\n// module id = 890\n// module chunks = 6\n\n//# sourceURL=webpack:///./custom-fields-plugin.js?");

/***/ })

},[890]);