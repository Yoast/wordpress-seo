(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var redirectFunctions = require("./redirects/functions");

window.wpseo_undo_redirect = redirectFunctions.wpseo_undo_redirect;
window.wpseo_create_redirect = redirectFunctions.wpseo_create_redirect;

},{"./redirects/functions":2}],2:[function(require,module,exports){
"use strict";

/* global wpseo_premium_strings, ajaxurl */

/**
 * Undoes a redirect.
 *
 * @param {string} origin The redirect's origin.
 * @param {string} target The redirect's target.
 * @param {string} type The type of redirect.
 * @param {string} nonce The nonce being used to validate the current AJAX request.
 * @param {object} source The DOMElement containing the alerts.
 *
 * @returns {void}
 */
function wpseo_undo_redirect(origin, target, type, nonce, source) {
	jQuery.post(ajaxurl, {
		action: "wpseo_delete_redirect_plain",
		ajax_nonce: nonce,
		redirect: {
			origin: origin,
			target: target,
			type: type
		}
	}, function () {
		jQuery(source).closest(".yoast-alert").fadeOut("slow");
	});
}

/**
 * Creates a redirect
 *
 * @param {string} origin The origin.
 * @param {string} type   The redirect type, regex or plain.
 * @param {string} nonce  The nonce.
 * @param {object} source The source of the redirect.
 *
 * @returns {void}
 */
function wpseo_create_redirect(origin, type, nonce, source) {
	var target = "";

	if (parseInt(type, 10) !== 410) {
		/* eslint-disable no-alert */
		target = window.prompt(wpseo_premium_strings.enter_new_url.replace("%s", origin));
		/* eslint-enable no-alert */

		if (target === '') {
			/* eslint-disable no-alert */
			window.alert(wpseo_premium_strings.error_new_url);
			/* eslint-enable no-alert */
			return;
		}
	}

	jQuery.post(ajaxurl, {
		action: "wpseo_add_redirect_plain",
		ajax_nonce: nonce,
		redirect: {
			origin: origin,
			target: target,
			type: type
		}
	}, function (response) {
		var notice = jQuery(source).closest(".yoast-alert");
		// Remove the classes first.
		jQuery(notice).removeClass("updated").removeClass("error");

		// Remove possibly added redirect errors.
		jQuery(notice).find(".redirect_error").remove();

		if (response.error) {
			// Add paragraph on top of the notice with actions and set class to error.
			jQuery(notice).addClass("error").prepend("<p class=\"redirect_error\">" + response.error.message + "</p>");

			return;
		}

		// Parse the success message.
		var successMessage = "";
		if (parseInt(type, 10) === 410) {
			successMessage = wpseo_premium_strings.redirect_saved_no_target;
		} else {
			successMessage = wpseo_premium_strings.redirect_saved.replace("%2$s", "<code>" + response.target + "</code>");
		}

		successMessage = successMessage.replace("%1$s", "<code>" + response.origin + "</code>");

		// Set class to updated and replace html with the success message.
		jQuery(notice).addClass("updated").html("<p>" + successMessage + "</p>");
	}, "json");
}

module.exports = {
	wpseo_create_redirect: wpseo_create_redirect,
	wpseo_undo_redirect: wpseo_undo_redirect
};

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhc3NldHMvanMvc3JjL3JlZGlyZWN0LW5vdGlmaWNhdGlvbnMuanMiLCJhc3NldHMvanMvc3JjL3JlZGlyZWN0cy9mdW5jdGlvbnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQUksb0JBQW9CLFFBQVMsdUJBQVQsQ0FBeEI7O0FBRUEsT0FBTyxtQkFBUCxHQUE2QixrQkFBa0IsbUJBQS9DO0FBQ0EsT0FBTyxxQkFBUCxHQUErQixrQkFBa0IscUJBQWpEOzs7OztBQ0hBOztBQUVBOzs7Ozs7Ozs7OztBQVdBLFNBQVMsbUJBQVQsQ0FBOEIsTUFBOUIsRUFBc0MsTUFBdEMsRUFBOEMsSUFBOUMsRUFBb0QsS0FBcEQsRUFBMkQsTUFBM0QsRUFBb0U7QUFDbkUsUUFBTyxJQUFQLENBQ0MsT0FERCxFQUVDO0FBQ0MsVUFBUSw2QkFEVDtBQUVDLGNBQVksS0FGYjtBQUdDLFlBQVU7QUFDVCxXQUFRLE1BREM7QUFFVCxXQUFRLE1BRkM7QUFHVCxTQUFNO0FBSEc7QUFIWCxFQUZELEVBV0MsWUFBVztBQUNWLFNBQVEsTUFBUixFQUFpQixPQUFqQixDQUEwQixjQUExQixFQUEyQyxPQUEzQyxDQUFvRCxNQUFwRDtBQUNBLEVBYkY7QUFlQTs7QUFFRDs7Ozs7Ozs7OztBQVVBLFNBQVMscUJBQVQsQ0FBZ0MsTUFBaEMsRUFBd0MsSUFBeEMsRUFBOEMsS0FBOUMsRUFBcUQsTUFBckQsRUFBOEQ7QUFDN0QsS0FBSSxTQUFTLEVBQWI7O0FBRUEsS0FBSSxTQUFVLElBQVYsRUFBZ0IsRUFBaEIsTUFBeUIsR0FBN0IsRUFBbUM7QUFDbEM7QUFDQSxXQUFTLE9BQU8sTUFBUCxDQUFlLHNCQUFzQixhQUF0QixDQUFvQyxPQUFwQyxDQUE2QyxJQUE3QyxFQUFtRCxNQUFuRCxDQUFmLENBQVQ7QUFDQTs7QUFFQSxNQUFLLFdBQVcsRUFBaEIsRUFBcUI7QUFDcEI7QUFDQSxVQUFPLEtBQVAsQ0FBYyxzQkFBc0IsYUFBcEM7QUFDQTtBQUNBO0FBQ0E7QUFDRDs7QUFFRCxRQUFPLElBQVAsQ0FDQyxPQURELEVBRUM7QUFDQyxVQUFRLDBCQURUO0FBRUMsY0FBWSxLQUZiO0FBR0MsWUFBVTtBQUNULFdBQVEsTUFEQztBQUVULFdBQVEsTUFGQztBQUdULFNBQU07QUFIRztBQUhYLEVBRkQsRUFXQyxVQUFVLFFBQVYsRUFBcUI7QUFDcEIsTUFBSSxTQUFTLE9BQVEsTUFBUixFQUFpQixPQUFqQixDQUEwQixjQUExQixDQUFiO0FBQ0E7QUFDQSxTQUFRLE1BQVIsRUFDRSxXQURGLENBQ2UsU0FEZixFQUVFLFdBRkYsQ0FFZSxPQUZmOztBQUlBO0FBQ0EsU0FBUSxNQUFSLEVBQWlCLElBQWpCLENBQXVCLGlCQUF2QixFQUEyQyxNQUEzQzs7QUFFQSxNQUFJLFNBQVMsS0FBYixFQUFxQjtBQUNwQjtBQUNBLFVBQVEsTUFBUixFQUNFLFFBREYsQ0FDWSxPQURaLEVBRUUsT0FGRixDQUVXLGlDQUFpQyxTQUFTLEtBQVQsQ0FBZSxPQUFoRCxHQUEwRCxNQUZyRTs7QUFJQTtBQUNBOztBQUVEO0FBQ0EsTUFBSSxpQkFBaUIsRUFBckI7QUFDQSxNQUFJLFNBQVUsSUFBVixFQUFnQixFQUFoQixNQUF5QixHQUE3QixFQUFtQztBQUNsQyxvQkFBaUIsc0JBQXNCLHdCQUF2QztBQUNBLEdBRkQsTUFFTztBQUNOLG9CQUFpQixzQkFBc0IsY0FBdEIsQ0FBcUMsT0FBckMsQ0FBOEMsTUFBOUMsRUFBc0QsV0FBVyxTQUFTLE1BQXBCLEdBQTZCLFNBQW5GLENBQWpCO0FBQ0E7O0FBRUQsbUJBQWlCLGVBQWUsT0FBZixDQUF3QixNQUF4QixFQUFnQyxXQUFXLFNBQVMsTUFBcEIsR0FBNkIsU0FBN0QsQ0FBakI7O0FBRUE7QUFDQSxTQUFRLE1BQVIsRUFDRSxRQURGLENBQ1ksU0FEWixFQUVFLElBRkYsQ0FFUSxRQUFRLGNBQVIsR0FBeUIsTUFGakM7QUFHQSxFQTVDRixFQTZDQyxNQTdDRDtBQStDQTs7QUFFRCxPQUFPLE9BQVAsR0FBaUI7QUFDaEIsd0JBQXVCLHFCQURQO0FBRWhCLHNCQUFxQjtBQUZMLENBQWpCIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsInZhciByZWRpcmVjdEZ1bmN0aW9ucyA9IHJlcXVpcmUoIFwiLi9yZWRpcmVjdHMvZnVuY3Rpb25zXCIgKTtcblxud2luZG93Lndwc2VvX3VuZG9fcmVkaXJlY3QgPSByZWRpcmVjdEZ1bmN0aW9ucy53cHNlb191bmRvX3JlZGlyZWN0O1xud2luZG93Lndwc2VvX2NyZWF0ZV9yZWRpcmVjdCA9IHJlZGlyZWN0RnVuY3Rpb25zLndwc2VvX2NyZWF0ZV9yZWRpcmVjdDtcbiIsIi8qIGdsb2JhbCB3cHNlb19wcmVtaXVtX3N0cmluZ3MsIGFqYXh1cmwgKi9cblxuLyoqXG4gKiBVbmRvZXMgYSByZWRpcmVjdC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gb3JpZ2luIFRoZSByZWRpcmVjdCdzIG9yaWdpbi5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXQgVGhlIHJlZGlyZWN0J3MgdGFyZ2V0LlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGUgVGhlIHR5cGUgb2YgcmVkaXJlY3QuXG4gKiBAcGFyYW0ge3N0cmluZ30gbm9uY2UgVGhlIG5vbmNlIGJlaW5nIHVzZWQgdG8gdmFsaWRhdGUgdGhlIGN1cnJlbnQgQUpBWCByZXF1ZXN0LlxuICogQHBhcmFtIHtvYmplY3R9IHNvdXJjZSBUaGUgRE9NRWxlbWVudCBjb250YWluaW5nIHRoZSBhbGVydHMuXG4gKlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIHdwc2VvX3VuZG9fcmVkaXJlY3QoIG9yaWdpbiwgdGFyZ2V0LCB0eXBlLCBub25jZSwgc291cmNlICkge1xuXHRqUXVlcnkucG9zdChcblx0XHRhamF4dXJsLFxuXHRcdHtcblx0XHRcdGFjdGlvbjogXCJ3cHNlb19kZWxldGVfcmVkaXJlY3RfcGxhaW5cIixcblx0XHRcdGFqYXhfbm9uY2U6IG5vbmNlLFxuXHRcdFx0cmVkaXJlY3Q6IHtcblx0XHRcdFx0b3JpZ2luOiBvcmlnaW4sXG5cdFx0XHRcdHRhcmdldDogdGFyZ2V0LFxuXHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0fSxcblx0XHR9LFxuXHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5KCBzb3VyY2UgKS5jbG9zZXN0KCBcIi55b2FzdC1hbGVydFwiICkuZmFkZU91dCggXCJzbG93XCIgKTtcblx0XHR9XG5cdCk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJlZGlyZWN0XG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG9yaWdpbiBUaGUgb3JpZ2luLlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGUgICBUaGUgcmVkaXJlY3QgdHlwZSwgcmVnZXggb3IgcGxhaW4uXG4gKiBAcGFyYW0ge3N0cmluZ30gbm9uY2UgIFRoZSBub25jZS5cbiAqIEBwYXJhbSB7b2JqZWN0fSBzb3VyY2UgVGhlIHNvdXJjZSBvZiB0aGUgcmVkaXJlY3QuXG4gKlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIHdwc2VvX2NyZWF0ZV9yZWRpcmVjdCggb3JpZ2luLCB0eXBlLCBub25jZSwgc291cmNlICkge1xuXHR2YXIgdGFyZ2V0ID0gXCJcIjtcblxuXHRpZiggcGFyc2VJbnQoIHR5cGUsIDEwICkgIT09IDQxMCApIHtcblx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1hbGVydCAqL1xuXHRcdHRhcmdldCA9IHdpbmRvdy5wcm9tcHQoIHdwc2VvX3ByZW1pdW1fc3RyaW5ncy5lbnRlcl9uZXdfdXJsLnJlcGxhY2UoIFwiJXNcIiwgb3JpZ2luICkgKTtcblx0XHQvKiBlc2xpbnQtZW5hYmxlIG5vLWFsZXJ0ICovXG5cblx0XHRpZiAoIHRhcmdldCA9PT0gJycgKSB7XG5cdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1hbGVydCAqL1xuXHRcdFx0d2luZG93LmFsZXJ0KCB3cHNlb19wcmVtaXVtX3N0cmluZ3MuZXJyb3JfbmV3X3VybCApO1xuXHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1hbGVydCAqL1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0fVxuXG5cdGpRdWVyeS5wb3N0KFxuXHRcdGFqYXh1cmwsXG5cdFx0e1xuXHRcdFx0YWN0aW9uOiBcIndwc2VvX2FkZF9yZWRpcmVjdF9wbGFpblwiLFxuXHRcdFx0YWpheF9ub25jZTogbm9uY2UsXG5cdFx0XHRyZWRpcmVjdDoge1xuXHRcdFx0XHRvcmlnaW46IG9yaWdpbixcblx0XHRcdFx0dGFyZ2V0OiB0YXJnZXQsXG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHR9LFxuXHRcdH0sXG5cdFx0ZnVuY3Rpb24oIHJlc3BvbnNlICkge1xuXHRcdFx0dmFyIG5vdGljZSA9IGpRdWVyeSggc291cmNlICkuY2xvc2VzdCggXCIueW9hc3QtYWxlcnRcIiApO1xuXHRcdFx0Ly8gUmVtb3ZlIHRoZSBjbGFzc2VzIGZpcnN0LlxuXHRcdFx0alF1ZXJ5KCBub3RpY2UgKVxuXHRcdFx0XHQucmVtb3ZlQ2xhc3MoIFwidXBkYXRlZFwiIClcblx0XHRcdFx0LnJlbW92ZUNsYXNzKCBcImVycm9yXCIgKTtcblxuXHRcdFx0Ly8gUmVtb3ZlIHBvc3NpYmx5IGFkZGVkIHJlZGlyZWN0IGVycm9ycy5cblx0XHRcdGpRdWVyeSggbm90aWNlICkuZmluZCggXCIucmVkaXJlY3RfZXJyb3JcIiApLnJlbW92ZSgpO1xuXG5cdFx0XHRpZiggcmVzcG9uc2UuZXJyb3IgKSB7XG5cdFx0XHRcdC8vIEFkZCBwYXJhZ3JhcGggb24gdG9wIG9mIHRoZSBub3RpY2Ugd2l0aCBhY3Rpb25zIGFuZCBzZXQgY2xhc3MgdG8gZXJyb3IuXG5cdFx0XHRcdGpRdWVyeSggbm90aWNlIClcblx0XHRcdFx0XHQuYWRkQ2xhc3MoIFwiZXJyb3JcIiApXG5cdFx0XHRcdFx0LnByZXBlbmQoIFwiPHAgY2xhc3M9XFxcInJlZGlyZWN0X2Vycm9yXFxcIj5cIiArIHJlc3BvbnNlLmVycm9yLm1lc3NhZ2UgKyBcIjwvcD5cIiApO1xuXG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUGFyc2UgdGhlIHN1Y2Nlc3MgbWVzc2FnZS5cblx0XHRcdHZhciBzdWNjZXNzTWVzc2FnZSA9IFwiXCI7XG5cdFx0XHRpZiggcGFyc2VJbnQoIHR5cGUsIDEwICkgPT09IDQxMCApIHtcblx0XHRcdFx0c3VjY2Vzc01lc3NhZ2UgPSB3cHNlb19wcmVtaXVtX3N0cmluZ3MucmVkaXJlY3Rfc2F2ZWRfbm9fdGFyZ2V0O1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0c3VjY2Vzc01lc3NhZ2UgPSB3cHNlb19wcmVtaXVtX3N0cmluZ3MucmVkaXJlY3Rfc2F2ZWQucmVwbGFjZSggXCIlMiRzXCIsIFwiPGNvZGU+XCIgKyByZXNwb25zZS50YXJnZXQgKyBcIjwvY29kZT5cIiApO1xuXHRcdFx0fVxuXG5cdFx0XHRzdWNjZXNzTWVzc2FnZSA9IHN1Y2Nlc3NNZXNzYWdlLnJlcGxhY2UoIFwiJTEkc1wiLCBcIjxjb2RlPlwiICsgcmVzcG9uc2Uub3JpZ2luICsgXCI8L2NvZGU+XCIgKTtcblxuXHRcdFx0Ly8gU2V0IGNsYXNzIHRvIHVwZGF0ZWQgYW5kIHJlcGxhY2UgaHRtbCB3aXRoIHRoZSBzdWNjZXNzIG1lc3NhZ2UuXG5cdFx0XHRqUXVlcnkoIG5vdGljZSApXG5cdFx0XHRcdC5hZGRDbGFzcyggXCJ1cGRhdGVkXCIgKVxuXHRcdFx0XHQuaHRtbCggXCI8cD5cIiArIHN1Y2Nlc3NNZXNzYWdlICsgXCI8L3A+XCIgKTtcblx0XHR9LFxuXHRcdFwianNvblwiXG5cdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuXHR3cHNlb19jcmVhdGVfcmVkaXJlY3Q6IHdwc2VvX2NyZWF0ZV9yZWRpcmVjdCxcblx0d3BzZW9fdW5kb19yZWRpcmVjdDogd3BzZW9fdW5kb19yZWRpcmVjdCxcbn07XG4iXX0=
