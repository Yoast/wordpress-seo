<?xml version="1.0"?>
<ruleset name="Yoast SEO">
    <description>Yoast SEO rules for PHP_CodeSniffer</description>

    <file>.</file>

    <exclude-pattern>tests/*</exclude-pattern>
    <exclude-pattern>vendor/*</exclude-pattern>
    <exclude-pattern>vendor_prefixed/*</exclude-pattern>
    <exclude-pattern>node_modules/*</exclude-pattern>
    <exclude-pattern>deprecated/*</exclude-pattern>
    <exclude-pattern>languages/*</exclude-pattern>
    <exclude-pattern>artifact/*</exclude-pattern>
    <exclude-pattern>.wordpress-svn/*</exclude-pattern>
    <exclude-pattern>config/php-scoper/*</exclude-pattern>

    <arg name="extensions" value="php"/>
    <arg value="sp"/>

    <rule ref="Yoast">
        <exclude name="WordPress.WP.PreparedSQL.NotPrepared"/><!-- TODO audit raw queries -->
        <exclude name="WordPress.Functions.DontExtract" /><!-- TODO audit usage & replace -->
        <exclude name="Squiz.Commenting.FunctionCommentThrowTag.WrongNumber" /><!-- TODO Remove this once we're on 0.5. See https://github.com/squizlabs/PHP_CodeSniffer/issues/650 for more info. -->
    </rule>

    <!-- Exclude migrations folder from filename checks, as we do not have control over this format -->
    <rule ref="WordPress.Files.FileName.UnderscoresNotAllowed">
        <exclude-pattern>migrations/*</exclude-pattern>
    </rule>

    <rule ref="Generic.Files.LowercasedFilename.NotFound">
        <exclude-pattern>migrations/*</exclude-pattern>
    </rule>
    <!-- /Exclude migrations folder -->

    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" value="wordpress-seo"/>
        </properties>
    </rule>

    <rule ref="WordPress.NamingConventions.ValidVariableName">
        <properties>
            <property name="customVariablesWhitelist" type="array" value="pageUrl,responseCode,siteEntry,siteUrl,countPerTypes,urlCrawlErrorSample,buyUrl,infoUrl" />
        </properties>
    </rule>

    <!-- TEMPORARY exclusion! This has to do with a bug in WPCS 0.10.0. The bug has been fixed in WPCS 0.11.0. -->
    <rule ref="WordPress.WP.I18n.UnorderedPlaceholders">
        <exclude-pattern>inc/class-wpseo-replace-vars.php</exclude-pattern>
    </rule>

    <!-- TEMPORARY exclusion! Because we're not on 0.5 yet -->
    <rule ref="WordPress.VIP.RestrictedFunctions">
        <exclude-pattern>inc/class-wpseo-image-utils.php</exclude-pattern>
    </rule>

	<!--
	#############################################################################
	SNIFF FOR PHP CROSS-VERSION COMPATIBILITY
	#############################################################################
	-->
	<config name="testVersion" value="5.2-"/>
	<rule ref="PHPCompatibilityWP"/>

	<!-- WP-CLI and src (indexables) have a minimum PHP requirement of PHP 5.3. -->
	<rule ref="PHPCompatibility.LanguageConstructs.NewLanguageConstructs.t_ns_separatorFound">
		<exclude-pattern>*/cli/class-cli-*\.php$</exclude-pattern>
		<exclude-pattern>*/src/*.php$</exclude-pattern>
		<exclude-pattern>*/migrations/*.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.Keywords.NewKeywords.t_useFound">
		<exclude-pattern>*/cli/class-cli-*\.php$</exclude-pattern>
		<exclude-pattern>*/src/*.php$</exclude-pattern>
		<exclude-pattern>*/migrations/*.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.FunctionNameRestrictions.NewMagicMethods.__invokeFound">
		<exclude-pattern>*/src/*.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.Classes.NewLateStaticBinding.Found">
		<exclude-pattern>*/src/*.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.Keywords.NewKeywords.t_namespaceFound">
		<exclude-pattern>*/src/*.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.FunctionUse.NewFunctions.get_called_classFound">
		<exclude-pattern>*/src/*.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.Syntax.NewDynamicAccessToStatic.Found">
		<exclude-pattern>*/src/*.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.FunctionDeclarations.NewClosure.Found">
		<exclude-pattern>*/src/*.php$</exclude-pattern>
	</rule>

	<!-- These usages of PHP > 5.2 code are surrounded by the correct safeguards. -->
	<rule ref="PHPCompatibility.FunctionUse.NewFunctionParameters.parse_ini_file_scanner_modeFound">
		<exclude-pattern>*/admin/import/class-import-settings\.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.Constants.NewConstants.ini_scanner_rawFound">
		<exclude-pattern>*/admin/import/class-import-settings\.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.FunctionUse.NewFunctionParameters.http_build_query_enc_typeFound">
		<exclude-pattern>*/inc/sitemaps/class-sitemaps-renderer\.php$</exclude-pattern>
	</rule>
	<rule ref="PHPCompatibility.FunctionUse.NewFunctionParameters.array_unique_sort_flagsFound">
		<exclude-pattern>*/inc/sitemaps/class-sitemap-image-parser\.php$</exclude-pattern>
	</rule>

</ruleset>
