language: php
dist: xenial
sudo: false

services:
  - mysql

branches:
  only:
    - master
    - trunk
    - /^release\/*/
    - /^hotfix\/\d+\.\d+(\.\d+)?(-\S*)?$/
    - /^feature\/*/
    # Also build tags like 1.1.1 or 1.1 for deployment.
    - /^\d+\.\d+(\.\d+)?(-\S*)?$/

stages:
  # Don't run the test steps on tag builds, this makes tag deployments a ton faster.
  - name: test
    if: NOT tag is present
  - ðŸš€ deployment

jobs:
  fast_finish: true
  include:
    - php: 7.3
      env: WP_VERSION=latest PHPLINT=1 PHPCS=1 CHECKJS=1 TRAVIS_NODE_VERSION=lts/*
    - php: 7.3
      env: WP_VERSION=latest WP_MULTISITE=1 COVERAGE=1
    - php: 5.6
      env: WP_VERSION=latest PHPUNIT=1
      # Use 'trusty' to test against MySQL 5.6, 'xenial' contains 5.7 by default.
      dist: trusty
    - php: 5.2
      # As 'trusty' is not supporting PHP 5.2/5.3 anymore, we need to force using 'precise'.
      dist: precise
      env: WP_VERSION=5.0 WP_MULTISITE=1 PHPLINT=1 PHPUNIT=1
    - php: 7.3
      env: WP_VERSION=master PHPUNIT=1
    - php: "7.4snapshot"
      env: WP_VERSION=latest PHPUNIT=1
    - stage: ðŸš€ deployment
      name: "Deploy to S3"
      if: branch = deploy # Only build when on the `deploy` branch, this functionality is not used yet and is taking a long time to complete.
      env: SC_ATTR=wordpress-seo
      before_script: skip
      script: grunt artifact
      install:
        - yarn global add grunt-cli
        - yarn install
      deploy:
        skip_cleanup: true
        provider: s3
        access_key_id: AKIAJRNLQAPRL5UKDJKQ
        secret_access_key:
          secure: TE13B5MDyw16DxEIRpbXPtxb1LZAzi8jdCU4FZuTzNsdVaowlAXUEFFB+g8uapoQhJKqvZrwvrpqifRPhH0tcRlJ5Z0A+qWp8WhiFGmipp3gJBblacviAIvswGzKFN8+DgQVwHSKpzk3ZjEkDkH/KYq6OTYPL/g5oRwsjI0Ug9w=
        bucket: yoast-seo-builds
        region: us-east-1
        local-dir: artifact
        upload-dir: $TRAVIS_BRANCH
        on:
          repo: Yoast/wordpress-seo
          all_branches: true
    - stage: ðŸš€ deployment
      name: "Deploy to Yoast-dist"
      php: 7.2
      install:
        - yarn global add grunt-cli
        - yarn install
      before_script: skip
      script:
        - grunt set-version -new-version=$TRAVIS_TAG
        - grunt update-version
        - grunt artifact
        - grunt composer-artifact
      if: tag IS present
      before_install:
        - nvm install lts/*
        - curl -o- -L https://yarnpkg.com/install.sh | bash
        - export PATH=$HOME/.yarn/bin:$PATH
        - openssl aes-256-cbc -K $encrypted_06a9c1b95cfa_key -iv $encrypted_06a9c1b95cfa_iv -in ./deploy_keys/travis_dist_id_rsa.enc -out ./deploy_keys/travis_dist_id_rsa -d
        - chmod 600 ./deploy_keys/travis_dist_id_rsa
        - eval $(ssh-agent -s)
        - ssh-add ./deploy_keys/travis_dist_id_rsa

       # If the commit was tagged, create an artifact and push it to the distribution github
      deploy:
        skip_cleanup: true
        provider: script
        script: bash scripts/deploy_to_dist.sh $TRAVIS_TAG wordpress-seo
        on:
          tags: true
          repo: $TRAVIS_REPO_SLUG
          all_branches: true

  allow_failures:
    # Allow failures for unstable builds.
    - php: "7.4snapshot"
      env: WP_VERSION=latest PHPUNIT=1
    - php: 7.3
      env: WP_VERSION=master PHPUNIT=1
cache:
  yarn: true
  directories:
    - $HOME/.composer/cache
    - node_modules

before_install:
- PHPUNIT_BIN="phpunit"
- if [[ ${TRAVIS_PHP_VERSION:0:1} == "7" ]]; then PHPUNIT_BIN="vendor/bin/phpunit"; fi
- if [[ -z "$CC_TEST_REPORTER_ID" ]]; then COVERAGE="0"; fi
- if [[ "$COVERAGE" != "1" ]]; then phpenv config-rm xdebug.ini || echo 'No xdebug config.'; fi
- |
  if [[ "$CHECKJS" == "1" ]]; then
    nvm install $TRAVIS_NODE_VERSION
    curl -o- -L https://yarnpkg.com/install.sh | bash
    export PATH=$HOME/.yarn/bin:$PATH
  fi

install:
- if [[ $TRAVIS_PHP_VERSION == "5.2" ]]; then phpenv local 5.6.13; fi
- |
  if [[ ${TRAVIS_PHP_VERSION:0:1} == "7" ]]; then
    composer remove humbug/php-scoper --dev --ignore-platform-reqs
    composer require phpunit/phpunit ^5.7 --ignore-platform-reqs
  fi
- |
  if [[ "$PHPCS" == "1" ]]; then
    composer install --no-interaction
    composer config-yoastcs
  else
    composer install --no-dev --no-interaction --ignore-platform-reqs
  fi
- composer dump-autoload
- if [[ $TRAVIS_PHP_VERSION == "5.2" ]]; then phpenv local --unset; fi
- |
  if [[ "$CHECKJS" == "1" ]]; then
    yarn global add grunt-cli
    yarn install
  fi

before_script:
# Careful: The HTTPS version of the following URL is different, therefore we need to use HTTP.
- |
  if [[ "$WP_VERSION" == "latest" ]]; then
    curl -s http://api.wordpress.org/core/version-check/1.7/ > /tmp/wp-latest.json
    WP_VERSION=$(grep -o '"version":"[^"]*' /tmp/wp-latest.json | sed 's/"version":"//')
  fi
- PLUGIN_SLUG=$(basename $(pwd))
- export WP_DEVELOP_DIR=/tmp/wordpress/
- git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/wordpress
- cd ..
- cp -r "$PLUGIN_SLUG" "/tmp/wordpress/src/wp-content/plugins/$PLUGIN_SLUG"
- cd /tmp/wordpress/
- cp wp-tests-config-sample.php wp-tests-config.php
- sed -i "s/youremptytestdbnamehere/wordpress_tests/" wp-tests-config.php
- sed -i "s/yourusernamehere/travis/" wp-tests-config.php
- sed -i "s/yourpasswordhere//" wp-tests-config.php
- mysql -e "CREATE DATABASE wordpress_tests;" -uroot
- cd "/tmp/wordpress/src/wp-content/plugins/$PLUGIN_SLUG"
- phpenv rehash
- |
  if [[ "$COVERAGE" == "1" ]]; then
    curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    chmod +x ./cc-test-reporter
    ./cc-test-reporter before-build
  fi
- export -f travis_fold
- export -f travis_time_start
- export -f travis_time_finish
- mysql --version
- phpenv versions
- php --version
- php -m
- $PHPUNIT_BIN --version
- curl --version
- git --version
- svn --version
- |
  if [[ "$CHECKJS" == "1" ]]; then
    npm --version
    node --version
    yarn --version
    grunt --version
  fi
- locale -a

script:
# JavaScript checks
- |
  if [[ "$CHECKJS" == "1" ]]; then
    travis_fold start "JavaScript.check" && travis_time_start
    grunt check:js
    travis_time_finish && travis_fold end "JavaScript.check"
  fi
# JavaScript tests
- |
  if [[ "$CHECKJS" == "1" ]]; then
    travis_fold start "JavaScript.tests" && travis_time_start
    yarn test
    travis_time_finish && travis_fold end "JavaScript.tests"
  fi
# PHP Linting
- |
  if [[ "$PHPLINT" == "1" ]]; then
    travis_fold start "PHP.check" && travis_time_start
    if [[ $TRAVIS_PHP_VERSION == "5.2" ]]; then
      SKIP_CLI="-o -path ./cli -prune"
    fi
    if [[ $TRAVIS_PHP_VERSION == "5.2" ]]; then
      find -L . -path ./vendor -prune -o -path ./node_modules -prune $SKIP_CLI -o -path ./migrations -prune -o -path ./src -prune -o -path ./tests/src -prune -o -path ./config -prune -o -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l
    else
      find -L . -path ./vendor -prune -o -path ./node_modules -prune -o -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l
    fi
    travis_time_finish && travis_fold end "PHP.check"
  fi
# PHP CS
- |
  if [[ "$PHPCS" == "1" ]]; then
    travis_fold start "PHP.code-style" && travis_time_start
    if [[ -d "premium" ]]; then
      composer premium-check-cs
    else
      vendor/bin/phpcs -q --runtime-set ignore_warnings_on_exit 1
    fi
    travis_time_finish && travis_fold end "PHP.code-style"
  fi
# PHP Unit
- |
  if [[ "$PHPUNIT" == "1" ]]; then
    travis_fold start "PHP.tests" && travis_time_start
    $PHPUNIT_BIN
    travis_time_finish && travis_fold end "PHP.tests"
  fi;
# Coverage environment variable is only set on the PHP 7 build, so we can safely
# assume that PHPUnit is in the vendor directory.
- |
  if [[ "$COVERAGE" == "1" ]]; then
    travis_fold start "PHP.coverage" && travis_time_start
    $PHPUNIT_BIN --coverage-clover build/logs/clover.xml
    travis_time_finish && travis_fold end "PHP.coverage"
  fi
# Validate the composer.json file.
# @link https://getcomposer.org/doc/03-cli.md#validate
- if [[ $TRAVIS_PHP_VERSION == "5.6" || $TRAVIS_PHP_VERSION == "7.3" ]]; then composer validate --no-check-all; fi

after_script:
- if [[ "$COVERAGE" == "1" ]]; then ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT; fi

notifications:
  slack:
    secure: W3StABr+AdcdQawTObK4nbsnn5nLrTTtZfVpD/GEN6gvSOQcykbGEC5+ceYg0jn5b4StDyCiTo5blEsrpVICFpYKc44+ogah+qaGRUfVRS/rpOvn4AueXTWn4JxhZzuxqKMiTmyW+MQG0uYM7sk7Q5S+15jj6ilkj4QATaBVNbY=
  email: false
